{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\Web(HTML_CSS_JV)\\\\p-i-s\\\\frontend\\\\src\\\\components\\\\Cart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cart() {\n  _s();\n  const [groupedCart, setGroupedCart] = useState([]);\n  useEffect(() => {\n    // Fetch or calculate groupedCart data here\n  }, []);\n  const handlePlaceOrder = async () => {\n    const orderData = {\n      items: groupedCart.map(item => ({\n        productId: item.id,\n        quantity: item.quantity,\n        totalPrice: item.totalPrice\n      }))\n    };\n    try {\n      const response = await axios.post('/api/orders', orderData);\n      if (response.status === 201) {\n        alert('Order placed successfully!');\n        // Optionally, clear the cart or redirect the user\n      }\n    } catch (error) {\n      console.error('Error placing order:', error);\n      alert('Failed to place order.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: groupedCart.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, \" - \", item.quantity, \"x  \", item.totalPrice, \" K\\u010D\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlaceOrder,\n      children: \"Place Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(Cart, \"W79U1+BC+xGy/ZFL6a41iRZVo2o=\");\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Cart","_s","groupedCart","setGroupedCart","handlePlaceOrder","orderData","items","map","item","productId","id","quantity","totalPrice","response","post","status","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","index","name","onClick","_c","$RefreshReg$"],"sources":["D:/Programs/Web(HTML_CSS_JV)/p-i-s/frontend/src/components/Cart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Cart() {\n    const [groupedCart, setGroupedCart] = useState([]);\n\n    useEffect(() => {\n        // Fetch or calculate groupedCart data here\n    }, []);\n\n    const handlePlaceOrder = async () => {\n        const orderData = {\n            items: groupedCart.map(item => ({\n                productId: item.id,\n                quantity: item.quantity,\n                totalPrice: item.totalPrice\n            }))\n        };\n\n        try {\n            const response = await axios.post('/api/orders', orderData);\n            if (response.status === 201) {\n                alert('Order placed successfully!');\n                // Optionally, clear the cart or redirect the user\n            }\n        } catch (error) {\n            console.error('Error placing order:', error);\n            alert('Failed to place order.');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Cart</h2>\n            <ul>\n                {groupedCart.map((item, index) => (\n                    <li key={index}>\n                        {item.name} - {item.quantity}x  {item.totalPrice} Kƒç\n                    </li>\n                ))}\n            </ul>\n            <button onClick={handlePlaceOrder}>Place Order</button>\n        </div>\n    );\n}\n\nexport default Cart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACZ;EAAA,CACH,EAAE,EAAE,CAAC;EAEN,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,SAAS,GAAG;MACdC,KAAK,EAAEJ,WAAW,CAACK,GAAG,CAACC,IAAI,KAAK;QAC5BC,SAAS,EAAED,IAAI,CAACE,EAAE;QAClBC,QAAQ,EAAEH,IAAI,CAACG,QAAQ;QACvBC,UAAU,EAAEJ,IAAI,CAACI;MACrB,CAAC,CAAC;IACN,CAAC;IAED,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,aAAa,EAAET,SAAS,CAAC;MAC3D,IAAIQ,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QACzBC,KAAK,CAAC,4BAA4B,CAAC;QACnC;MACJ;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CD,KAAK,CAAC,wBAAwB,CAAC;IACnC;EACJ,CAAC;EAED,oBACIjB,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbxB,OAAA;MAAAoB,QAAA,EACKjB,WAAW,CAACK,GAAG,CAAC,CAACC,IAAI,EAAEgB,KAAK,kBACzBzB,OAAA;QAAAoB,QAAA,GACKX,IAAI,CAACiB,IAAI,EAAC,KAAG,EAACjB,IAAI,CAACG,QAAQ,EAAC,KAAG,EAACH,IAAI,CAACI,UAAU,EAAC,UACrD;MAAA,GAFSY,KAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLxB,OAAA;MAAQ2B,OAAO,EAAEtB,gBAAiB;MAAAe,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEd;AAACtB,EAAA,CAzCQD,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AA2Cb,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}